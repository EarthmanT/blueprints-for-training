tosca_definitions_version: nativeedge_1_0

description: >
  Blueprint creates a Windows VM on NED using NativeEdge Plugin and installs PTC Thingworx Foundation software on top of it using Ansible.

imports:
  - nativeedge/types/types.yaml
  - infrastructure/nativeedge_ece_vm/inputs.yaml
  - infrastructure/nativeedge_ece_vm/blueprint.yaml
  - application/inputs.yaml
  - application/inputs_common.yaml
  - application/blueprint.yaml
  - application/outputs.yaml
  - plugin:nativeedge-plugin
  - plugin:nativeedge-utilities-plugin
  - plugin:nativeedge-ansible-plugin
labels:

  csys-obj-type:
    values:
      - environment

  target_environment:
    values:
      - ned

  vendor:
    values:
      - ptc

  solution:
    values:
      - thingworx_foundation

  version:
    values:
      - 9.3.11
blueprint_labels:

  env:
    values:
      - NED

inputs:

  vm_user_name:
    type: string
    hidden: false
    allow_update: false
    display_label: Deployment User
    description: >
      Name of the deployment user on the Virtual Machine.

      Cannot contain leading or trailing spaces.
    default: Administrator
    constraints:
      - pattern: ^(?!\s)(?!.*\s$).*$
        error_message: Cannot contain leading or trailing spaces.

  vm_password_secret_name:
    type: secret_key
    hidden: false
    allow_update: false
    display_label: Virtual Machine Password Secret Name
    description: >
      Secret name containing the user password for

      the Windows Virtual Machine.

  hostname:
    type: string
    hidden: false
    allow_update: false
    display_label: Hostname
    description: >
      Hostname of the Virtual Machine

      (an auto-generated suffix will also be added).

      Cannot contain characters other than:

      letters (a-z, A-Z), numbers (0-9), or hyphens (-).

      Can be up to 63 characters long.
    constraints:
      - pattern: ^(?!-)[a-zA-Z0-9-]{1,63}(?<!-)$
        error_message: >
          Must be letters (a-z, A-Z), numbers (0-9), or hyphens (-).

          No more than 64 characters.
      - max_length: 64

  binary_image_artifact_url:
    type: string
    hidden: true
    display_label: Virtual Machine Image Repository URL
    description: >
      URL of the Image Binary that will be used to create

      the Virtual Machine.
    default: { get_secret: [{get_input: artifact_configuration_secret_name}, "binary_image_url"] }

  binary_image_artifact_username:
    type: string
    hidden: true
    display_label: Virtual Machine Image Repository User Name
    description: >
      User name of the Repository of the Image Binary that will be

      used to create the Virtual Machine.
    default: { get_secret: [{get_input: artifact_configuration_secret_name}, "binary_image_access_user"] }

  binary_image_artifact_access_token_secret_name:
    type: list
    hidden: true
    display_label: Virtual Machine Image Repository Token Secret Name
    description: >
      Name of the secret storing the Token to the Repository of the

      Image Binary that will be used to create the Virtual Machine.
    default:
      - { get_input: artifact_configuration_secret_name }
      - binary_image_access_token

  binary_image_version:
    type: string
    hidden: true
    display_label: Virtual Machine Image Version
    description: >
      Virtual Machine Image Version that will be used to create

      the Virtual Machine.
    default: { get_secret: [{get_input: artifact_configuration_secret_name}, "binary_image_version"] }

  os_type:
    type: string
    hidden: false
    allow_update: false
    display_label: OS Type
    description: The virtual machine Operating System.
    default: WIN2019-SERVER
    constraints:
      - valid_values:
          - WIN2019-SERVER
          - WIN-OTHERS

  vcpus:
    type: integer
    hidden: false
    display_label: vCPUs
    description: >
      Number of virtual CPUs allocated to the Virtual Machine.

      See https://support.ptc.com/help/thingworx/platform/r9/en/index.html#page/ThingWorx/Help/Installation/Sizing/select_hardware_sizing.html

      for recommendations.
    default: 4
    constraints:
      - greater_or_equal: 2

  memory_size:
    type: string
    hidden: false
    display_label: Memory Size
    description: >
      Memory size with unit [KB,MB,GB,TB,PB,EB,ZB,YB].

      See https://support.ptc.com/help/thingworx/platform/r9/en/index.html#page/ThingWorx/Help/Installation/Sizing/select_hardware_sizing.html

      for recommendations.
    default: 16GB
    constraints:
      - pattern: \d+(\.\d+)?(KB|MB|GB|TB|PB|EB|ZB|YB)
        error_message: >
          Incorrect format.

          Memory size must be followed by unit [KB,MB,GB,TB,PB,EB,ZB,YB].

          Example: 4GB

  os_disk_size:
    type: string
    hidden: false
    display_label: OS Disk Size
    description: >
      Storage size with unit [KB,MB,GB,TB,PB,EB,ZB,YB].

      See https://support.ptc.com/help/thingworx/platform/r9/en/index.html#page/ThingWorx/Help/Installation/Sizing/select_hardware_sizing.html

      for recommendations.
    default: 150GB
    constraints:
      - pattern: \d+(\.\d+)?(KB|MB|GB|TB|PB|EB|ZB|YB)
        error_message: >
          Incorrect format.

          Disk size must be followed by unit [KB,MB,GB,TB,PB,EB,ZB,YB].

          Example: 50GB

  disk:
    type: string
    hidden: false
    allow_update: false
    display_label: Endpoint Datastore Path
    description: >
      Deployment datastore path on target endpoint.

      Available datastores can be retrieved from the endpoint screen.
    default: /DataStore0
    constraints:
      - pattern: ^\/[a-zA-Z0-9]+$
        error_message: >
          Must start with slash (/), followed by alphanumeric characters.

          Example: /DataStore0

  hardware_options.vTPM:
    type: boolean
    hidden: true
    allow_update: false
    display_label: Hardware Options - vTPM
    description: >
      Enable vTPM.

      Required for For Windows 11 OS, optional for other OS.
    default: false

  hardware_options.secure_boot:
    type: boolean
    hidden: true
    allow_update: false
    display_label: Hardware Options - Secure Boot
    description: >
      Enable secure boot.

      Required for For Windows 11 OS, optional for other OS.
    default: false

  hardware_options.firmware_type:
    type: string
    hidden: false
    allow_update: false
    display_label: Hardware Options - Firmware Type
    description: >
      The firmware type configured in the Virtual Machine.

      For Windows 11 OS this must be UEFI.
    default: BIOS
    constraints:
      - valid_values:
          - BIOS
          - UEFI

  enable_management:
    type: boolean
    hidden: true
    allow_update: false
    display_label: Enable Management
    description: >
      Enable management which will create a tap interface for

      the infrastructure segment.
    default: true

  dhcp:
    type: boolean
    hidden: false
    allow_update: false
    display_label: DHCP
    description: >
      Enable to allow IP configuration to be taken from DHCP

      instead of static IP settings.
    default: true

  static_ip:
    type: string
    hidden: false
    allow_update: false
    display_label: Static IP and Mask Suffix
    description: >
      IP address and suffix. Example: 172.16.0.1/16.

      Only required for static IP deployments, not for DHCP.
    required: false
    constraints:
      - pattern: ^((25[0-5]|2[0-4]\d|1\d\d|\d{1,2})(\.(\d{1,3})){3}(\/(3[0-2]|[12]?\d))?|)$
        error_message: >
          Invalid format for IP Address in CIDR format.

          Example: 172.16.0.1/16

  dns:
    type: list
    hidden: false
    allow_update: false
    display_label: DNS Servers
    description: List of DNS servers addresses.
    required: false

  gateway:
    type: string
    hidden: false
    allow_update: false
    display_label: Gateway IP Address
    description: IP Address of the Network Gateway.
    required: false
    constraints:
      - pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$|^$
        error_message: >
          Invalid format for IP Address.

          Example: 172.16.0.1

  segment_name:
    type: string
    hidden: false
    allow_update: false
    display_label: Bridged Network Name
    description: Name of the Bridged Network.
    constraints:
      - pattern: ^[a-zA-Z0-9_.-]+$
        error_message: >
          Must be letters (a-z, A-Z), numbers (0-9), underscores (_),

          dots (.), or hyphens (-).

  network_settings:
    type: list
    hidden: true
    display_label: Network Settings
    description: List of VMDeployNetworkSettings.
    default:
      - name: VNIC1
        segment_name: { get_input: segment_name }

  usb:
    type: list
    hidden: true
    allow_update: false
    display_label: USB Devices List
    description: >
      A list of USB logical names to pass through to the Virtual Machine.

      Valid values are "USB-1" to "USB-10"

      Please make sure to select the USB port where USB device is connected.
    required: false
    default: []
    item_type: string
    constraints:
      - valid_values:
          - USB-1
          - USB-2
          - USB-3
          - USB-4
          - USB-5
          - USB-6
          - USB-7
          - USB-8
          - USB-9
          - USB-10

  serial_port:
    type: list
    hidden: true
    allow_update: false
    display_label: Serial Port
    description: >
      Serial port passthrough.

      Please make sure to select the port where required device is connected.
    required: false
    default: []
    item_type: dict
    constraints:
      - valid_values:
          - port: COM-1
          - port: COM-2
          - port: COM-3
          - port: COM-4
          - port: COM-5
          - port: COM-6
          - port: COM-7
          - port: COM-8
          - port: COM-9
          - port: COM-10

  gpu_passthrough:
    type: list
    hidden: true
    allow_update: false
    display_label: GPU Passthrough
    description: >
      A list of GPU logical names.

      Please make sure to select the GPU that is currently available in your

      Endpoint. A list of GPU logical names available for your endpoint can

      be found in the NativeEdge UI under Endpoints / Hardware / Peripherals
    required: false
    default: []
    item_type: string
    constraints:
      - valid_values:
          - NVIDIA A2
          - NVIDIA A10
          - NVIDIA A30
          - NVIDIA A40
          - NVIDIA A100
          - NVIDIA L4
          - NVIDIA L40

  video:
    type: list
    hidden: true
    allow_update: false
    display_label: Video Passthrough
    description: >
      Video passthrough. A list of Video logical names (string).

      E.g. 'Onboard Controller'
    required: false
    default: []

  cloudinit:
    type: string
    hidden: true
    display_label: Cloud Init Config
    description: >
      Cloud init cloud config, can be obtained with

      nativeedge.nodes.CloudInit.CloudConfig
    required: false
    default: ''

  iso_files:
    type: list
    hidden: true
    display_label: ISO Files
    description: >
      List ISO files (references to catalog) to be downloaded before

      VM provisioning.
    default: []
    required: false

  tw_db_name:
    type: string
    allow_update: false
    display_label: ThingWorx Database Name
    description: ThingWorx Database Name
    default: thingworx

  twadmin_password_secret_name:
    hidden: false
    allow_update: false
    type: secret_key
    display_label: MSSQL TWAdmin Password Secret Name
    description: >
      The name of secret with twadmin MSSQL user password.

      Password complexity is defined below:

      - cannot contain the account name of the user

      - is at least eight characters long

      - contains characters from three of the following four categories:
        uppercase letters (A-Z), lowercase letters (a-z), numbers (0-9),
        special characters (!$#%).
      Passwords can be up to 128 characters long.

      Use passwords that are as long and complex as possible.

  thingworx_initial_password_secret_name:
    hidden: false
    allow_update: false
    type: secret_key
    display_label: ThingWorx Foundation Initial Password
    description: Secret name containing the Thingworx initial password

  tw_server_port:
    type: integer
    allow_update: false
    display_label: ThingWorx Server Port
    description: Port of the ThingWorx Server
    default: 8080

  all_artifacts_urls:
    type: dict
    hidden: true
    default:
      SQLServer2019-x64-ENU.iso:
        airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "SQLServer2019-x64-ENU.iso", {get_input: artifact_base_url_parameters}] }
        internet_connected: https://download.microsoft.com/download/8/4/c/84c6c430-e0f5-476d-bf43-eaaa222a72e0/SQLServer2019-x64-ENU.iso
      amazon-corretto-11.0.20.8.1-windows-x64.msi:
        airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "amazon-corretto-11.0.20.8.1-windows-x64.msi", {get_input: artifact_base_url_parameters}] }
        internet_connected: https://corretto.aws/downloads/resources/11.0.20.8.1/amazon-corretto-11.0.20.8.1-windows-x64.msi
      msodbcsql.msi:
        airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "msodbcsql.msi", {get_input: artifact_base_url_parameters}] }
        internet_connected: https://download.microsoft.com/download/6/f/f/6ffefc73-39ab-4cc0-bb7c-4093d64c2669/en-US/17.10.4.1/x64/msodbcsql.msi
      MsSqlCmdLnUtils.msi:
        airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MsSqlCmdLnUtils.msi", {get_input: artifact_base_url_parameters}] }
        internet_connected: https://download.microsoft.com/download/a/a/4/aa47b3b0-9f67-441d-8b00-e74cd845ea9f/EN/x64/MsSqlCmdLnUtils.msi
      MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip:
        airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip", {get_input: artifact_base_url_parameters}] }
        internet_connected: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip", {get_input: artifact_base_url_parameters}] }

  mssql_installer_file:
    type: string
    hidden: true
    display_label: MSSQL installer file name
    default: SQLServer2019-x64-ENU.iso

  mssql_installer_url:
    type: string
    hidden: true
    default: { get_input: ["all_artifacts_urls", "SQLServer2019-x64-ENU.iso", {get_input: environment_type}] }
    description: URL to MSSQL installer

  mssql_invoke_webrequest_config_secret_name:
    type: list
    hidden: true
    display_label: MSSQL Installer Invoke-WebRequest Config Secret Name
    description: >
      The name of secret with Invoke-WebRequest parameters used on MSSQL installer file download
    default:
      - { get_input: artifact_configuration_secret_name }
      - artifact_download_webrequest_config

  jdk_installer_file:
    type: string
    hidden: true
    display_label: JDK (Amazon Corretto) installer file name
    default: amazon-corretto-11.0.20.8.1-windows-x64.msi

  jdk_installer_url:
    type: string
    hidden: true
    default: { get_input: ["all_artifacts_urls", "amazon-corretto-11.0.20.8.1-windows-x64.msi", {get_input: environment_type}] }
    description: URL to JDK (Amazon Corretto) installer

  jdk_headers_secret_name:
    type: list
    hidden: true
    display_label: JDK Installer Download Headers Secret Name
    description: Headers used for JDK installer download
    default:
      - { get_input: artifact_configuration_secret_name }
      - artifact_download_headers

  odbc_installer_file:
    type: string
    hidden: true
    display_label: ODBC Driver Installer File Name
    default: msodbcsql.msi

  odbc_installer_url:
    type: string
    hidden: true
    default: { get_input: ["all_artifacts_urls", "msodbcsql.msi", {get_input: environment_type}] }
    description: URL to ODBC installer

  odbc_headers_secret_name:
    type: list
    hidden: true
    display_label: ODBC Driver Installer Download Headers Secret Name
    description: Headers used for ODBC Driver installer download
    default:
      - { get_input: artifact_configuration_secret_name }
      - artifact_download_headers

  sqlcmd_installer_file:
    type: string
    hidden: true
    display_label: SQLCMD installer file name
    default: MsSqlCmdLnUtils.msi

  sqlcmd_installer_url:
    type: string
    hidden: true
    default: { get_input: ["all_artifacts_urls", "MsSqlCmdLnUtils.msi", {get_input: environment_type}] }
    description: URL to SQLCMD installer

  sqlcmd_headers_secret_name:
    type: list
    hidden: true
    display_label: SQLCMD Installer Download Headers Secret Name
    description: Headers used for SQLCMD installer download
    default:
      - { get_input: artifact_configuration_secret_name }
      - artifact_download_headers

  tw_installer_zip:
    type: string
    hidden: true
    display_label: ThingWorx Foundation Installer Zipfile Name
    default: MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip

  tw_installer_file:
    type: string
    allow_update: false
    display_label: ThingWorx Foundation Installer File Name
    description: >
      ThingWorx Foundation installer executable file name in the zipfile
    default: ThingWorxFoundationMSSQL-9.3.11-x64.exe

  tw_installer_url:
    type: string
    hidden: true
    default: { get_input: ["all_artifacts_urls", "MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip", {get_input: environment_type}] }
    description: URL to ThingWorx Foundation installer

  tw_headers_secret_name:
    type: list
    hidden: true
    display_label: ThingWorx Foundation Installer Download Headers Secret Name
    description: Headers used for ThingWorx Foundation installer download
    default:
      - { get_input: artifact_configuration_secret_name }
      - artifact_download_headers

  environment_type:
    type: string
    hidden: false
    allow_update: false
    display_label: Air-Gapped
    description: >
      Choose "airgapped" - all the binaries will be downloaded from the local

      artifact store, or "internet_connected" for binaries that are available

      on the Internet with a public URL.
    default: internet_connected
    constraints:
      - valid_values:
          - airgapped
          - internet_connected

  artifact_configuration_secret_name:
    type: secret_key
    hidden: false
    allow_update: false
    display_label: Artifact Configuration Secret Name
    description: >
      Secret name containing details needed for binary image and

      artifacts download.

  artifact_download_headers_secret_name:
    type: list
    hidden: true
    display_label: Artifact Download Headers Secret Name
    description: >
      The secret name that contains headers used for download framework

      to fetch artifacts. Headers are used for

      "ansible.windows.win_get_url" module to connect with the external

      storage.
    default:
      - { get_input: artifact_configuration_secret_name }
      - artifact_download_headers

  artifact_base_url_parameters:
    type: string
    hidden: true
    display_label: Artifact Download Base URL Parameters
    description: URL suffix that will be added by default to all artifacts URLs.
    default: { get_secret: [{get_input: artifact_configuration_secret_name}, "artifact_base_url_parameters"] }

  win_get_url_validate_certs:
    type: boolean
    hidden: false
    allow_update: false
    display_label: Validate SSL Certificate on Downloads
    description: >
      If enabled, ensure that SSL certificates are checked.

      If disabled, allow insecure certificates (such as self-signed).
    default: false

  ansible_log_stdout:
    type: boolean
    hidden: true
    display_label: Save Ansible Output to Logs
    description: >
      If enabled, the logs from Ansible Playbooks executions will be

      propagated to the logs of the deployment. Only enable if necessary

      as this option will slow down the overall execution. Please note

      that in the case of any errors, logs from Ansible Playbooks

      executions will still be visible even when this option disabled.
    default: false

  ansible_censor_sensitive_data:
    type: boolean
    hidden: true
    display_label: Ansible Censor Output in Logs
    description: >
      If enabled, the logs from Ansible Playbooks executions

      will be censored.

      All logs from tasks with sensitive data will be suppressed.

      Can be disabled for debugging purposes.
    default: true

dsl_definitions:

  ansible_common_inputs:
    ansible_playbook_executable_path: { get_property: ["SELF", "ansible_playbook_executable_path"] }
    sources: { get_property: ["SELF", "sources"] }
    sensitive_keys: { get_property: ["SELF", "sensitive_keys"] }
    log_stdout: { get_input: ansible_log_stdout }
    store_facts: false
    debug_level: 0

  win:
    ansible_host: { get_attribute: ["vm_winrm_proxy", "eo_proxy_url"] }
    ansible_port: { get_attribute: ["vm_winrm_proxy", "eo_proxy_port"] }
    ansible_user: { get_input: vm_user_name }
    ansible_password: { get_secret: {get_input: vm_password_secret_name} }
    ansible_become_password: { get_secret: {get_input: vm_password_secret_name} }
    ansible_connection: winrm
    ansible_winrm_scheme: http
    ansible_winrm_transport: ntlm
    ansible_winrm_operation_timeout_sec: 180
    ansible_winrm_read_timeout_sec: 360

  mssql_installer: SQLServer2019-x64-ENU.iso

  mssql_installer_airgapped_url: { concat: [{get_attribute: [validate_base_url, installer_url]}, "SQLServer2019-x64-ENU.iso", {get_input: artifact_base_url_parameters}] }

  mssql_installer_internet_url: https://download.microsoft.com/download/8/4/c/84c6c430-e0f5-476d-bf43-eaaa222a72e0/SQLServer2019-x64-ENU.iso

  jdk_installer: amazon-corretto-11.0.20.8.1-windows-x64.msi

  jdk_installer_airgapped_url: { concat: [{get_attribute: [validate_base_url, installer_url]}, "amazon-corretto-11.0.20.8.1-windows-x64.msi", {get_input: artifact_base_url_parameters}] }

  jdk_installer_internet_url: https://corretto.aws/downloads/resources/11.0.20.8.1/amazon-corretto-11.0.20.8.1-windows-x64.msi

  odbc_installer: msodbcsql.msi

  odbc_installer_airgapped_url: { concat: [{get_attribute: [validate_base_url, installer_url]}, "msodbcsql.msi", {get_input: artifact_base_url_parameters}] }

  odbc_installer_internet_url: https://download.microsoft.com/download/6/f/f/6ffefc73-39ab-4cc0-bb7c-4093d64c2669/en-US/17.10.4.1/x64/msodbcsql.msi

  sqlcmd_installer: MsSqlCmdLnUtils.msi

  sqlcmd_installer_airgapped_url: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MsSqlCmdLnUtils.msi", {get_input: artifact_base_url_parameters}] }

  sqlcmd_installer_internet_url: https://download.microsoft.com/download/a/a/4/aa47b3b0-9f67-441d-8b00-e74cd845ea9f/EN/x64/MsSqlCmdLnUtils.msi

  tw_zip_archive: MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip

  tw_zip_archive_airgapped_url: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip", {get_input: artifact_base_url_parameters}] }

  tw_zip_archive_internet_url: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip", {get_input: artifact_base_url_parameters}] }

  jdk_headers:
    - { get_input: artifact_configuration_secret_name }
    - artifact_download_headers

  odbc_headers:
    - { get_input: artifact_configuration_secret_name }
    - artifact_download_headers

  sqlcmd_headers:
    - { get_input: artifact_configuration_secret_name }
    - artifact_download_headers

  tw_headers:
    - { get_input: artifact_configuration_secret_name }
    - artifact_download_headers

  all_artifacts_urls:
    SQLServer2019-x64-ENU.iso:
      airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "SQLServer2019-x64-ENU.iso", {get_input: artifact_base_url_parameters}] }
      internet_connected: https://download.microsoft.com/download/8/4/c/84c6c430-e0f5-476d-bf43-eaaa222a72e0/SQLServer2019-x64-ENU.iso
    amazon-corretto-11.0.20.8.1-windows-x64.msi:
      airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "amazon-corretto-11.0.20.8.1-windows-x64.msi", {get_input: artifact_base_url_parameters}] }
      internet_connected: https://corretto.aws/downloads/resources/11.0.20.8.1/amazon-corretto-11.0.20.8.1-windows-x64.msi
    msodbcsql.msi:
      airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "msodbcsql.msi", {get_input: artifact_base_url_parameters}] }
      internet_connected: https://download.microsoft.com/download/6/f/f/6ffefc73-39ab-4cc0-bb7c-4093d64c2669/en-US/17.10.4.1/x64/msodbcsql.msi
    MsSqlCmdLnUtils.msi:
      airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MsSqlCmdLnUtils.msi", {get_input: artifact_base_url_parameters}] }
      internet_connected: https://download.microsoft.com/download/a/a/4/aa47b3b0-9f67-441d-8b00-e74cd845ea9f/EN/x64/MsSqlCmdLnUtils.msi
    MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip:
      airgapped: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip", {get_input: artifact_base_url_parameters}] }
      internet_connected: { concat: [{get_attribute: [validate_base_url, installer_url]}, "MED-61212-CD-093_SP11_ThingWorx-Foundation-Installer-mssql-windows-9-3-11.zip", {get_input: artifact_base_url_parameters}] }

  mssql_ansible_host:
    ansible_host: { get_attribute: ["thingworx_vm", "capabilities", "ip", 0] }
    ansible_port: { get_attribute: ["thingworx_vm", "capabilities", "ports", 0] }
    ansible_user: { get_attribute: ["thingworx_vm", "capabilities", "usernames", 0] }
    ansible_password: { get_secret: {get_input: vm_password_secret_name} }
    ansible_connection: winrm
    ansible_winrm_scheme: http
    ansible_winrm_transport: ntlm
    ansible_winrm_operation_timeout_sec: 180
    ansible_winrm_read_timeout_sec: 360

  tw_foundation_ansible_host:
    ansible_host: { get_attribute: ["thingworx_vm", "capabilities", "ip", -1] }
    ansible_port: { get_attribute: ["thingworx_vm", "capabilities", "ports", -1] }
    ansible_user: { get_attribute: ["thingworx_vm", "capabilities", "usernames", -1] }
    ansible_password: { get_secret: {get_input: vm_password_secret_name} }
    ansible_become_password: { get_secret: {get_input: vm_password_secret_name} }
    ansible_connection: winrm
    ansible_winrm_scheme: http
    ansible_winrm_transport: ntlm
    ansible_winrm_operation_timeout_sec: 180
    ansible_winrm_read_timeout_sec: 360

node_templates:

  binary_image:
    type: nativeedge.nodes.template.BinaryImage
    properties:
      binary_image_config:
        artifact:
          path: { get_input: binary_image_artifact_url }
          username: { get_input: binary_image_artifact_username }
          access_token: { get_secret: {get_input: binary_image_artifact_access_token_secret_name} }
        version: { get_input: binary_image_version }
    interfaces:
      nativeedge.interfaces.lifecycle:
        precreate:
          implementation: nativeedge.nativeedge_plugin.tasks.validate_binary_image_config
        create:
          implementation: nativeedge.nativeedge_plugin.tasks.upload_binary
        delete:
          implementation: nativeedge.nativeedge_plugin.tasks.delete_binary

  vm_nativeedge:
    type: nativeedge.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          external_resource: true
          id: Windows_Virtual_Machine_for_NativeEdge_Endpoint_2.0.0
        deployment:
          display_name: { concat: [{get_sys: [deployment, name]}, "-vm"] }
          auto_inc_suffix: true
          inputs:
            vm_user_name: { get_input: vm_user_name }
            vm_password: { get_secret: {get_input: vm_password_secret_name} }
            service_tag: { get_environment_capability: ece_service_tag }
            name: { get_input: hostname }
            image: { get_attribute: ["binary_image", "binary_details", "extra", "artifact_id"] }
            os_type: { get_input: os_type }
            cpu: { get_input: vcpus }
            memory: { get_input: memory_size }
            storage: { get_input: os_disk_size }
            disk: { get_input: disk }
            hardware_options.vTPM: { get_input: hardware_options.vTPM }
            hardware_options.secure_boot: { get_input: hardware_options.secure_boot }
            hardware_options.firmware_type: { get_input: hardware_options.firmware_type }
            enable_management: { get_input: enable_management }
            dhcp: { get_input: dhcp }
            static_ip: { get_input: static_ip }
            dns: { get_input: dns }
            gateway: { get_input: gateway }
            network_settings: { get_input: network_settings }
            usb: { get_input: usb }
            serial_port: { get_input: serial_port }
            gpu: { get_input: gpu_passthrough }
            video: { get_input: video }
            cloudinit: { get_input: cloudinit }
            iso_files: { get_input: iso_files }
    interfaces:
      nativeedge.interfaces.lifecycle:
        start:
          inputs:
            timeout: 18000
    relationships:
      - type: nativeedge.relationships.depends_on
        target: binary_image

  vm_winrm_proxy:
    type: nativeedge.nodes.Root
    interfaces:
      nativeedge.interfaces.lifecycle:
        create:
          implementation: nativeedge.nativeedge_plugin.tasks.get_eo_proxy
          max_retries: 2
          inputs:
            serviceTag: { get_attribute: ["vm_nativeedge", "capabilities", "service_tag"] }
            vmRef: { get_attribute: ["vm_nativeedge", "capabilities", "vm_name"] }
            port: 5985
    relationships:
      - type: nativeedge.relationships.depends_on
        target: vm_nativeedge

  vm_nativeedge_ip:
    type: nativeedge.nodes.ansible.Executor
    properties:
      ansible_external_venv: /opt/ansible
      number_of_attempts: 60
      sensitive_keys:
        - ansible_password
        - ansible_user
        - ansible_ssh_private_key_file
      sources:
        all:
          hosts:
            win:
              ansible_host: { get_attribute: ["vm_winrm_proxy", "eo_proxy_url"] }
              ansible_port: { get_attribute: ["vm_winrm_proxy", "eo_proxy_port"] }
              ansible_user: { get_input: vm_user_name }
              ansible_password: { get_secret: {get_input: vm_password_secret_name} }
              ansible_become_password: { get_secret: {get_input: vm_password_secret_name} }
              ansible_connection: winrm
              ansible_winrm_scheme: http
              ansible_winrm_transport: ntlm
              ansible_winrm_operation_timeout_sec: 180
              ansible_winrm_read_timeout_sec: 360
    interfaces:
      nativeedge.interfaces.lifecycle:
        start:
          timeout: 1800
          max_retries: 10
          retry_interval: 60
          implementation: ansible.ne_ansible.tasks.run
          inputs:
            ansible_playbook_executable_path: { get_property: ["SELF", "ansible_playbook_executable_path"] }
            sources: { get_property: ["SELF", "sources"] }
            sensitive_keys: { get_property: ["SELF", "sensitive_keys"] }
            log_stdout: { get_input: ansible_log_stdout }
            store_facts: false
            debug_level: 0
            playbook_path: application/ansible/get_ip.yml
            run_data:
              node_instance_id: { get_attribute: ["SELF", "node_instance_id"] }
              tap_nic_mac: { get_attribute: ["vm_nativeedge", "capabilities", "vm_tap_mac_addr"] }
    relationships:
      - type: nativeedge.relationships.depends_on
        target: vm_winrm_proxy

  thingworx_vm:
    type: nativeedge.nodes.Root
    interfaces:
      nativeedge.interfaces.lifecycle:
        start:
          implementation: infrastructure/nativeedge_ece_vm/scripts/get_vm_info.py
          executor: central_deployment_agent
          inputs:
            ip:
              - { get_attribute: ["vm_winrm_proxy", "eo_proxy_url"] }
            vm_nativeedge_node_ids:
              - { get_attribute: ["vm_nativeedge_ip", "node_instance_id"] }
            ports:
              - { get_attribute: ["vm_winrm_proxy", "eo_proxy_port"] }
            names:
              thingworx_vm: { get_attribute: ["vm_nativeedge", "capabilities", "vm_name"] }
            usernames:
              - { get_input: vm_user_name }
    relationships:
      - type: nativeedge.relationships.depends_on
        target: vm_winrm_proxy
      - type: nativeedge.relationships.depends_on
        target: vm_nativeedge_ip

  validate_base_url:
    type: nativeedge.nodes.SoftwareComponent
    interfaces:
      nativeedge.interfaces.lifecycle:
        create:
          implementation: application/scripts/verify_base_url.py
          executor: central_deployment_agent
          inputs:
            base_url_secret_name: { get_input: artifact_configuration_secret_name }
            json_url_key: artifact_base_url

  mssql_install:
    type: nativeedge.nodes.ansible.Executor
    properties:
      ansible_external_venv: /opt/ansible
      number_of_attempts: 60
      sources:
        all:
          hosts:
            win:
              ansible_host: { get_attribute: ["thingworx_vm", "capabilities", "ip", 0] }
              ansible_port: { get_attribute: ["thingworx_vm", "capabilities", "ports", 0] }
              ansible_user: { get_attribute: ["thingworx_vm", "capabilities", "usernames", 0] }
              ansible_password: { get_secret: {get_input: vm_password_secret_name} }
              ansible_connection: winrm
              ansible_winrm_scheme: http
              ansible_winrm_transport: ntlm
              ansible_winrm_operation_timeout_sec: 180
              ansible_winrm_read_timeout_sec: 360
    interfaces:
      nativeedge.interfaces.lifecycle:
        start:
          timeout: 18000
          max_retries: 60
          retry_interval: 60
          implementation: ansible.ne_ansible.tasks.run
          inputs:
            ansible_playbook_executable_path: { get_property: ["SELF", "ansible_playbook_executable_path"] }
            sources: { get_property: ["SELF", "sources"] }
            log_stdout: { get_input: ansible_log_stdout }
            store_facts: false
            debug_level: 0
            playbook_path: application/ansible/mssql_install.yml
            run_data:
              mssql_installer_url: { get_input: mssql_installer_url }
              mssql_invoke_webrequest_config: { get_secret: {get_input: mssql_invoke_webrequest_config_secret_name} }
              tw_db_name: { get_input: tw_db_name }
              twadmin_password: { get_secret: {get_input: twadmin_password_secret_name} }
              vm_user_name: { get_input: vm_user_name }
              censor_sensitive_data: { get_input: ansible_censor_sensitive_data }
            sensitive_keys:
              - ansible_password
              - ansible_user
              - ansible_ssh_private_key_file
              - mssql_invoke_webrequest_config
              - twadmin_password
    relationships:
      - type: nativeedge.relationships.depends_on
        target: thingworx_vm
      - type: nativeedge.relationships.depends_on
        target: validate_base_url

  tw_foundation_install:
    type: nativeedge.nodes.ansible.Executor
    properties:
      ansible_external_venv: /opt/ansible
      number_of_attempts: 60
      sources:
        all:
          hosts:
            win:
              ansible_host: { get_attribute: ["thingworx_vm", "capabilities", "ip", -1] }
              ansible_port: { get_attribute: ["thingworx_vm", "capabilities", "ports", -1] }
              ansible_user: { get_attribute: ["thingworx_vm", "capabilities", "usernames", -1] }
              ansible_password: { get_secret: {get_input: vm_password_secret_name} }
              ansible_become_password: { get_secret: {get_input: vm_password_secret_name} }
              ansible_connection: winrm
              ansible_winrm_scheme: http
              ansible_winrm_transport: ntlm
              ansible_winrm_operation_timeout_sec: 180
              ansible_winrm_read_timeout_sec: 360
    interfaces:
      nativeedge.interfaces.lifecycle:
        start:
          timeout: 18000
          max_retries: 60
          retry_interval: 60
          implementation: ansible.ne_ansible.tasks.run
          inputs:
            ansible_playbook_executable_path: { get_property: ["SELF", "ansible_playbook_executable_path"] }
            sources: { get_property: ["SELF", "sources"] }
            log_stdout: { get_input: ansible_log_stdout }
            store_facts: false
            debug_level: 0
            playbook_path: application/ansible/thingworx_foundation_mssql_install.yml
            run_data:
              win_get_url_validate_certs: { get_input: win_get_url_validate_certs }
              jdk_installer_url: { get_input: jdk_installer_url }
              jdk_headers: { get_secret: {get_input: jdk_headers_secret_name} }
              jdk_installer_file: { get_input: jdk_installer_file }
              odbc_installer_url: { get_input: odbc_installer_url }
              odbc_headers: { get_secret: {get_input: odbc_headers_secret_name} }
              odbc_installer_file: { get_input: odbc_installer_file }
              sqlcmd_installer_url: { get_input: sqlcmd_installer_url }
              sqlcmd_headers: { get_secret: {get_input: sqlcmd_headers_secret_name} }
              sqlcmd_installer_file: { get_input: sqlcmd_installer_file }
              tw_installer_url: { get_input: tw_installer_url }
              tw_headers: { get_secret: {get_input: tw_headers_secret_name} }
              tw_installer_zip: { get_input: tw_installer_zip }
              tw_installer_file: { get_input: tw_installer_file }
              db_ip: { get_attribute: ["thingworx_vm", "capabilities", "internal_ip", 0] }
              tw_db_name: { get_input: tw_db_name }
              twadmin_password: { get_secret: {get_input: twadmin_password_secret_name} }
              thingworx_initial_password: { get_secret: {get_input: thingworx_initial_password_secret_name} }
              node_instance_id: { get_attribute: ["SELF", "node_instance_id"] }
              tw_server_port: { get_input: tw_server_port }
              vm_user_name: { get_input: vm_user_name }
              censor_sensitive_data: { get_input: ansible_censor_sensitive_data }
            sensitive_keys:
              - ansible_password
              - ansible_become_password
              - ansible_user
              - ansible_ssh_private_key_file
              - jdk_headers
              - odbc_headers
              - sqlcmd_headers
              - tw_headers
              - twadmin_password
              - thingworx_initial_password
              - node_instance_id
    relationships:
      - type: nativeedge.relationships.depends_on
        target: validate_base_url
      - type: nativeedge.relationships.depends_on
        target: mssql_install
      - type: nativeedge.relationships.depends_on
        target: thingworx_vm

  extract_device_id:
    type: nativeedge.nodes.Root
    interfaces:
      nativeedge.interfaces.lifecycle:
        create:
          implementation: application/scripts/get_device_id.py
          executor: central_deployment_agent
          inputs:
            license_req_localpath: { concat: ["/tmp/", {get_attribute: [tw_foundation_install, node_instance_id]}, "/licenseRequestFile.txt"] }
    relationships:
      - type: nativeedge.relationships.depends_on
        target: tw_foundation_install
capabilities:

  mssql_vm_host:
    description: MSSQL VM Host
    value: { get_attribute: ["thingworx_vm", "capabilities", "ip", 0] }

  mssql_vm_ip:
    description: MSSQL VM IP Address
    value: { get_attribute: ["thingworx_vm", "capabilities", "internal_ip", 0] }

  thingworx_vm_host:
    description: Thingworx Foundation VM Host
    value: { get_attribute: ["thingworx_vm", "capabilities", "ip", -1] }

  thingworx_vm_ip:
    description: Thingworx Foundation VM IP Address
    value: { get_attribute: ["thingworx_vm", "capabilities", "internal_ip", -1] }

  thingworx_vm_names:
    description: VM Name
    value: { get_attribute: ["thingworx_vm", "capabilities", "names"] }

  thingworx_foundation_endpoint:
    description: URL of Thingworx Foundation
    value: { concat: ["http://", {get_attribute: [thingworx_vm, capabilities, internal_ip, -1]}, ":", {get_input: tw_server_port}, "/Thingworx"] }

  thingworx_foundation_credentials:
    description: Inital Credentials
    value:
      username: Administrator
      password_secret_name: { get_input: thingworx_initial_password_secret_name }

  device_id:
    description: PTC Device ID that is required to activate the product
    value: { get_attribute: ["extract_device_id", "device_id"] }

  twf_capabilities:
    description: >
      Thingworx Foundation Capabilities, required by extensions (e.g. DPM)
    value:
      twf:
        vm_user_name: { get_attribute: ["thingworx_vm", "capabilities", "usernames", -1] }
        vm_password_secret_name: { get_input: vm_password_secret_name }
        winrm_port: { get_attribute: ["thingworx_vm", "capabilities", "ports", -1] }
        server_port: { get_input: tw_server_port }
      db:
        twadmin_password_secret_name: { get_input: twadmin_password_secret_name }
        local_ip: { get_attribute: ["thingworx_vm", "capabilities", "internal_ip", 0] }

